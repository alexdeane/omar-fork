<?xml version = "1.0" encoding = "UTF-8"?>
<!-- $Header: /cvsroot/ebxmlrr/omar/src/java/org/freebxml/omar/client/ui/common/conf/browserConfig.xsd,v 1.3 2004/05/18 17:43:51 farrukh_najmi Exp $ -->
<!-- Configuration file for JAXR Registry Browser -->
<schema xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="urn:oasis:names:tc:ebxml-regrep:config:xsd:3.0" xmlns:tns="urn:oasis:names:tc:ebxml-regrep:config:xsd:3.0" xmlns:rim="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" xmlns:query="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0">
  <annotation>
    <documentation xml:lang="en">
      <p>The schema for the configuration file for the JAXR registry browser</p>
    </documentation>
  </annotation>
  <!-- $Header: /cvsroot/ebxmlrr/omar/src/java/org/freebxml/omar/client/ui/common/conf/browserConfig.xsd,v 1.3 2004/05/18 17:43:51 farrukh_najmi Exp $ -->
  <!-- Import the rim.xsd file with XML schema mappaing from RIM -->
  <import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:rim:3.0" schemaLocation="../../../../../../../../../../ebxmlrr-spec/misc/3.0/schema/rim.xsd"/>
  <!-- Import the query.xsd file with XML schema for query related schema -->
  <import namespace="urn:oasis:names:tc:ebxml-regrep:xsd:query:3.0" schemaLocation="../../../../../../../../../../ebxmlrr-spec/misc/3.0/schema/query.xsd"/>
  <element name="RegistryURI" type="anyURI"/>
  <complexType name="RegistryURIListType">
    <annotation>
      <documentation>
        <p>Defines the Registry URLs displayed by the Registry Location combo box.</p>
      </documentation>
    </annotation>
    <sequence>
      <element ref="tns:RegistryURI" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="RegistryURIList" type="tns:RegistryURIListType"/>
  <complexType name="ConfigurationType">
    <annotation>
      <documentation>
        <p>The root element for defining the configuration for the Registry Browser.</p>
      </documentation>
    </annotation>
    <sequence>
      <element ref="tns:Property" minOccurs="0" maxOccurs="unbounded"/>
      <element ref="tns:RegistryURIList" minOccurs="0" maxOccurs="1"/>
      <element ref="tns:Query" minOccurs="0" maxOccurs="unbounded"/>
      <element ref="tns:ObjectTypeConfig" minOccurs="1" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="Configuration" type="tns:ConfigurationType"/>
  <complexType name="PropertyType">
    <annotation>
      <documentation>
        <p>Defines a simple name, value pair based property. Not used at this time.</p>
      </documentation>
    </annotation>
    <attribute name="name" use="required"/>
    <attribute name="value" use="required"/>
  </complexType>
  <element name="Property" type="tns:PropertyType"/>
  <element name="AdhocQueryRef" type="rim:ObjectRefType"/>
  <complexType name="ParameterType">
    <annotation>
      <documentation>
        <p>Defines a parameter for an ad hoc query.</p>
      </documentation>
    </annotation>
    <sequence minOccurs="0" maxOccurs="1">
      <element ref="rim:Name" minOccurs="1" maxOccurs="1"/>
      <element ref="rim:Description" minOccurs="0" maxOccurs="1"/>
      <element ref="rim:SlotList" minOccurs="0" maxOccurs="1"/>
    </sequence>
    
    <!--The parameterName must match the name in the stored parameterized query-->
    <attribute name="parameterName" type="string" use="required"/>
    <attribute name="datatype" type="string" use="required" />
    <!--simpleType>
      <restriction base="NMTOKEN">
        <enumeration value="string"/>
        <enumeration value="boolean"/>
        <enumeration value="integer"/>
        <enumeration value="timestamp"/>
        <enumeration value="locale"/>
        <enumeration value="taxonomyElement"/>
      </restriction>
    </simpleType-->
    <attribute name="defaultValue" use="optional"/>
  </complexType>
  <element name="Parameter" type="tns:ParameterType"/>
  <complexType name="QueryType">
    <annotation>
      <documentation>
        <p>Defines a parameterized ad hoc query for the Registry Browser.</p>
      </documentation>
    </annotation>
    <sequence minOccurs="1" maxOccurs="1">
      <element ref="tns:AdhocQueryRef" minOccurs="1" maxOccurs="1"/>
      <element ref="tns:Parameter" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="Query" type="tns:QueryType"/>
  <complexType name="ObjectTypeConfigType">
    <annotation>
      <documentation>
        <p>
          Defines configuration for handling a specific type of object within the Registry Browser.
          In particular it configures the Search Results table columns in the browser.
        </p>
        <h5>Attribute id:</h5>
        <p>
          id of Concept representing an ObjectType within the canonical ObjectType ClassificationScheme.
          May be looked up in ClassificationScheme dialog by Show Details on the ObjectType Concept.
        </p>
        <h5>Atribute className:</h5>
        <p>
          Fully qualified class name for the RIM class for this ObjectType.
          Usually same as value of the ObjectType Concept with a suffix of "Impl".
        </p>
        <h5>Element SearchResultsConfig:</h5>
        <p>Configures search results table for this ObjectType. Described below.</p>
      </documentation>
    </annotation>
    <sequence>
      <element ref="tns:SearchResultsConfig" minOccurs="0" maxOccurs="1"/>
    </sequence>
    <attribute name="id" use="required"/>
    <attribute name="className" use="required"/>
  </complexType>
  <element name="ObjectTypeConfig" type="tns:ObjectTypeConfigType"/>
  <complexType name="SearchResultsConfigType">
    <annotation>
      <documentation>
        <p>
          Configures how the Search Results table in RegistryBrowser
          displays the results of a search that displays objects belonging to that ObjectType.
        </p>
        <h5>Element SearchResultsColumn:</h5>
        <p>Configures a display column within the search results table of RegistryBrowser.</p>
      </documentation>
    </annotation>
    <sequence>
      <element ref="tns:SearchResultsColumn" minOccurs="1" maxOccurs="unbounded"/>
    </sequence>
  </complexType>
  <element name="SearchResultsConfig" type="tns:SearchResultsConfigType"/>
  <complexType name="SearchResultsColumnType">
    <annotation>
      <documentation>
        <p>
          Configures what columns to show in Search Results table for a specific ObjectType.
          One or more columns can be configured. For each column one can specify what attributes
          of the search result objects to show in that column.
        </p>
        <h5>Attribute editable:</h5>
        <p>
          Determines whether double-click on a cell in column enters edit mode or not.
          When true, double-click on cell enters edit mode for cell which is useful when
          cell is a String (for copying) and required if columnClass for cell is a URL or Collection.
          Set to true when columnClass is Collection, URL or String.
        </p>
        <h5>Attribute columnHeader:</h5>
        <p>Specifies what column header to display for this column.</p>
        <h5>Attribute columnWidth:</h5>
        <p>Specifies what column width for this column as a % of the width of the Scrollable Window.</p>
        <ul>
          <li>If a columnWidth is 0 then it gets asigned an average value (idth of the Scrollable Window divided by number of columns).</li>
          <li>If columnWidths add up to 100 then the columns will fit the Scrollable Window exactly.</li>
          <li>If columnWidths add up to greater than 100 then columns will not all be visible and a horizontal scroll bar will appear.</li>
          <li>If columnWidths add up to less than 100 then there will be white space to the right of the columns.</li>
        </ul>
        <h5>Attribute method:</h5>
        <p>
          Specifies what method to invoke on RegistryObject for search result row to display data for this column.
          See JAXR API infomodel interfaces for method names.
          You can also use any implementation specific methods (reqires reading code in com.sun.xml.registry.ebxml.infomodel package).
        </p>
        <h5>Attribute columnClass:</h5>
        <p>
          Specifies the fully qualified className representing the data type for this columns data.
          Specify java.lang.Object if not sure.
        </p>
        <h5>Element MethodParameter:</h5>
        <p>Specifies one or more parameters that are used when invoking the mobject ethod specified by methodName.</p>
      </documentation>
    </annotation>
    <sequence>
      <element ref="tns:MethodParameter" minOccurs="0" maxOccurs="unbounded"/>
    </sequence>
    <attribute name="editable" type="boolean" default="false"/>
    <attribute name="columnHeader" type="string" use="required"/>
    <attribute name="columnWidth" type="integer" use="optional" default="0"/>
    <attribute name="method" type="string" use="required"/>
    <attribute name="columnClass" type="string" use="required"/>
  </complexType>
  <element name="SearchResultsColumn" type="tns:SearchResultsColumnType"/>
  <complexType name="MethodParameterType">
    <annotation>
      <documentation>
        <p>
          Defines the configuration method parameters for the method that retrieves
          data for this column. Used during reflections API based method invocation.
        </p>
        <h5>Attribute name:</h5>
        <p>Name of parameter.</p>
        <h5>Attribute type:</h5>
        <p>The fully-qualified, case-sensitive java class for parameter type (e.g. java.lang.String).</p>
        <h5>Attribute value:</h5>
        <p>The value of the parameter.</p>
      </documentation>
    </annotation>
    <attribute name="name" type="string" use="optional"/>
    <attribute name="type" type="string" use="required"/>
    <attribute name="value" type="string" use="required"/>
  </complexType>
  <element name="MethodParameter" type="tns:MethodParameterType"/>
</schema>
