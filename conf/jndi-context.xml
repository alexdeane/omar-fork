<?xml version="1.0" encoding="UTF-8"?>
<!--$Header: /cvsroot/ebxmlrr/omar/conf/jndi-context.xml,v 1.8 2006/07/29 05:53:37 dougb62 Exp $-->
<Context path="/$$omar.name$$" docBase="$$omar.name$$">

  <Manager className="org.apache.catalina.session.PersistentManager" saveOnRestart="false">
        <Store className="org.apache.catalina.session.FileStore" />
  </Manager>

  <Logger className="org.apache.catalina.logger.FileLogger"
	  prefix="$$omar.name$$."
	  suffix=".log"
	  swallowOutput="true"
	  timestamp="true"/>

  <Resource name="jdbc/$$omar.name$$-registry"
	    scope="Shareable"
	    type="javax.sql.DataSource"/>

  <ResourceParams name="jdbc/$$omar.name$$-registry">
    <parameter>
      <name>factory</name>
      <value>org.apache.commons.dbcp.BasicDataSourceFactory</value>
    </parameter>
    <parameter>
      <name>description</name>
      <value>DB DataSource for $$omar.name$$ service</value>
    </parameter>
    <!--
    DBCP database connection settings.
    See: http://jakarta.apache.org/commons/dbcp/configuration.html
    -->
    <parameter>
      <name>url</name>
      <value>$$DB_URL$$</value>
    </parameter>
    <parameter>
      <name>driverClassName</name>
      <value>$$DB_DRIVER_CLASS$$</value>
    </parameter>
    <parameter>
      <name>username</name>
      <value>$$DB_USERNAME$$</value>
    </parameter>
    <parameter>
      <name>password</name>
      <value>$$DB_PASSWORD$$</value>
    </parameter>
    <!-- DBCP connection pooling options -->
    <parameter>
      <!-- The initial number of connections that are created when the pool is started. -->
      <name>initialSize</name>
      <value>20</value>
    </parameter>
    <parameter>
      <!--The maximum number of milliseconds that the pool will wait (when there are no available connections) for a connection to be returned before throwing an exception, or -1 to wait indefinitely.-->
      <name>maxWait</name>
      <value>10000</value>
    </parameter>
    <parameter>
      <!-- The maximum number of active connections that can remain idle in the pool, without extra ones being released, or zero for no limit.-->
      <name>maxIdle</name>
      <value>50</value>
    </parameter>
    <parameter>
      <!-- The maximum number of active connections that can be allocated from this pool at the same time, or zero for no limit.-->
      <name>maxActive</name>
      <value>50</value>
    </parameter>
    <parameter>
      <!--
      Flag to remove abandoned connections if they exceed the removeAbandonedTimout.
      If set to true a connection is considered abandoned and eligible for removal if
      it has been idle longer than the removeAbandonedTimeout.
      Setting this to true can recover db connections from poorly written
      applications which fail to close a connection.
      -->
      <name>removeAbandoned</name>
      <value>true</value>
    </parameter>
    <parameter>
      <!--Timeout in seconds before an abandoned connection can be removed.-->
      <name>removeAbandonedTimeout</name>
      <value>300</value>
    </parameter>
    <parameter>
      <!--
      Flag to log stack traces for application code which abandoned a Statement or Connection.
      Logging of abandoned Statements and Connections adds overhead for every Connection open or new Statement because a stack trace has to be generated.
      -->
      <name>logAbandoned</name>
      <value>true</value>
    </parameter>
    <parameter>
      <!--Enable prepared statement pooling for this pool.-->
      <name>poolPreparedStatements</name>
      <value>true</value>
    </parameter>
    <parameter>
      <!-- The maximum number of open statements that can be allocated from the statement pool at the same time, or zero for no limit.-->
      <name>maxOpenPreparedStatements</name>
      <value>0</value>
    </parameter>
  </ResourceParams>
$$DB_PARAMS$$
</Context>
